/*
 * NVDB API Les Uberiket
 * Dette API-et brukes til å lese uberikede hendelser, vegobjekter og vegnett. Les mer om bruk av API-et på https://nvdb.atlas.vegvesen.no/produkter/nvdbapil/v1/Uberiket
 *
 * The version of the OpenAPI document: v1
 * Contact: nvdb@vegvesen.no
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package no.vegvesen.nvdb.apiles.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonSubTypes;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import no.vegvesen.nvdb.apiles.model.Stedfesting;
import no.vegvesen.nvdb.apiles.model.StedfestingLinje;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * StedfestingLinjer
 */
@JsonPropertyOrder({
  StedfestingLinjer.JSON_PROPERTY_LINJER,
  StedfestingLinjer.JSON_PROPERTY_IS_EMPTY,
  StedfestingLinjer.JSON_PROPERTY_SIZE,
  StedfestingLinjer.JSON_PROPERTY_FIRST,
  StedfestingLinjer.JSON_PROPERTY_LAST
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.14.0")
@JsonIgnoreProperties(
  value = "type", // ignore manually set type, it will be automatically generated by Jackson during serialization
  allowSetters = true // allows the type to be set during deserialization
)
@JsonTypeInfo(use = JsonTypeInfo.Id.NAME, include = JsonTypeInfo.As.PROPERTY, property = "type", visible = true)

public class StedfestingLinjer extends Stedfesting {
  public static final String JSON_PROPERTY_LINJER = "linjer";
  @jakarta.annotation.Nonnull
  private List<StedfestingLinje> linjer = new ArrayList<>();

  public static final String JSON_PROPERTY_IS_EMPTY = "isEmpty";
  @jakarta.annotation.Nonnull
  private Boolean isEmpty;

  public static final String JSON_PROPERTY_SIZE = "size";
  @jakarta.annotation.Nonnull
  private Integer size;

  public static final String JSON_PROPERTY_FIRST = "first";
  @jakarta.annotation.Nullable
  private StedfestingLinje first;

  public static final String JSON_PROPERTY_LAST = "last";
  @jakarta.annotation.Nullable
  private StedfestingLinje last;

  public StedfestingLinjer() {

  }

  public StedfestingLinjer linjer(@jakarta.annotation.Nonnull List<StedfestingLinje> linjer) {
    
    this.linjer = linjer;
    return this;
  }

  public StedfestingLinjer addLinjerItem(StedfestingLinje linjerItem) {
    if (this.linjer == null) {
      this.linjer = new ArrayList<>();
    }
    this.linjer.add(linjerItem);
    return this;
  }

  /**
   * Get linjer
   * @return linjer
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_LINJER)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public List<StedfestingLinje> getLinjer() {
    return linjer;
  }


  @JsonProperty(JSON_PROPERTY_LINJER)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setLinjer(@jakarta.annotation.Nonnull List<StedfestingLinje> linjer) {
    this.linjer = linjer;
  }

  public StedfestingLinjer isEmpty(@jakarta.annotation.Nonnull Boolean isEmpty) {
    
    this.isEmpty = isEmpty;
    return this;
  }

  /**
   * Get isEmpty
   * @return isEmpty
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_IS_EMPTY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getIsEmpty() {
    return isEmpty;
  }


  @JsonProperty(JSON_PROPERTY_IS_EMPTY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setIsEmpty(@jakarta.annotation.Nonnull Boolean isEmpty) {
    this.isEmpty = isEmpty;
  }

  public StedfestingLinjer size(@jakarta.annotation.Nonnull Integer size) {
    
    this.size = size;
    return this;
  }

  /**
   * Get size
   * @return size
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_SIZE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getSize() {
    return size;
  }


  @JsonProperty(JSON_PROPERTY_SIZE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setSize(@jakarta.annotation.Nonnull Integer size) {
    this.size = size;
  }

  public StedfestingLinjer first(@jakarta.annotation.Nullable StedfestingLinje first) {
    
    this.first = first;
    return this;
  }

  /**
   * Get first
   * @return first
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_FIRST)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public StedfestingLinje getFirst() {
    return first;
  }


  @JsonProperty(JSON_PROPERTY_FIRST)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFirst(@jakarta.annotation.Nullable StedfestingLinje first) {
    this.first = first;
  }

  public StedfestingLinjer last(@jakarta.annotation.Nullable StedfestingLinje last) {
    
    this.last = last;
    return this;
  }

  /**
   * Get last
   * @return last
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LAST)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public StedfestingLinje getLast() {
    return last;
  }


  @JsonProperty(JSON_PROPERTY_LAST)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLast(@jakarta.annotation.Nullable StedfestingLinje last) {
    this.last = last;
  }


  @Override
  public StedfestingLinjer type(@jakarta.annotation.Nonnull String type) {
    this.setType(type);
    return this;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    StedfestingLinjer stedfestingLinjer = (StedfestingLinjer) o;
    return Objects.equals(this.linjer, stedfestingLinjer.linjer) &&
        Objects.equals(this.isEmpty, stedfestingLinjer.isEmpty) &&
        Objects.equals(this.size, stedfestingLinjer.size) &&
        Objects.equals(this.first, stedfestingLinjer.first) &&
        Objects.equals(this.last, stedfestingLinjer.last) &&
        super.equals(o);
  }

  @Override
  public int hashCode() {
    return Objects.hash(linjer, isEmpty, size, first, last, super.hashCode());
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class StedfestingLinjer {\n");
    sb.append("    ").append(toIndentedString(super.toString())).append("\n");
    sb.append("    linjer: ").append(toIndentedString(linjer)).append("\n");
    sb.append("    isEmpty: ").append(toIndentedString(isEmpty)).append("\n");
    sb.append("    size: ").append(toIndentedString(size)).append("\n");
    sb.append("    first: ").append(toIndentedString(first)).append("\n");
    sb.append("    last: ").append(toIndentedString(last)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

