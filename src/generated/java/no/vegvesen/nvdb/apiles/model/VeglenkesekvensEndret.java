/*
 * NVDB API Les Uberiket
 * Dette API-et brukes til å lese uberikede hendelser, vegobjekter og vegnett. Les mer om bruk av API-et på https://nvdb.atlas.vegvesen.no/produkter/nvdbapil/v1/Uberiket
 *
 * The version of the OpenAPI document: v1
 * Contact: nvdb@vegvesen.no
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package no.vegvesen.nvdb.apiles.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonSubTypes;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import java.util.LinkedHashSet;
import java.util.Set;
import no.vegvesen.nvdb.apiles.model.Veglenke;
import no.vegvesen.nvdb.apiles.model.Veglenkesekvensport;
import no.vegvesen.nvdb.apiles.model.VegnettHendelse;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Hendelse som indikerer at en veglenkesekvens har blitt endret. Porter og veglenker som ikke er hverken erstattet eller fjernet, er ikke inkludert i hendelsen.
 */
@JsonPropertyOrder({
  VeglenkesekvensEndret.JSON_PROPERTY_PORTER_ERSTATTET,
  VeglenkesekvensEndret.JSON_PROPERTY_PORTER_FJERNET,
  VeglenkesekvensEndret.JSON_PROPERTY_VEGLENKER_ERSTATTET,
  VeglenkesekvensEndret.JSON_PROPERTY_VEGLENKER_FJERNET,
  VeglenkesekvensEndret.JSON_PROPERTY_LENGDE,
  VeglenkesekvensEndret.JSON_PROPERTY_LAST_LENGDE
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.14.0")
@JsonIgnoreProperties(
  value = "type", // ignore manually set type, it will be automatically generated by Jackson during serialization
  allowSetters = true // allows the type to be set during deserialization
)
@JsonTypeInfo(use = JsonTypeInfo.Id.NAME, include = JsonTypeInfo.As.PROPERTY, property = "type", visible = true)

public class VeglenkesekvensEndret extends VegnettHendelse {
  public static final String JSON_PROPERTY_PORTER_ERSTATTET = "porterErstattet";
  @jakarta.annotation.Nonnull
  private Set<Veglenkesekvensport> porterErstattet = new LinkedHashSet<>();

  public static final String JSON_PROPERTY_PORTER_FJERNET = "porterFjernet";
  @jakarta.annotation.Nonnull
  private Set<Integer> porterFjernet = new LinkedHashSet<>();

  public static final String JSON_PROPERTY_VEGLENKER_ERSTATTET = "veglenkerErstattet";
  @jakarta.annotation.Nonnull
  private Set<Veglenke> veglenkerErstattet = new LinkedHashSet<>();

  public static final String JSON_PROPERTY_VEGLENKER_FJERNET = "veglenkerFjernet";
  @jakarta.annotation.Nonnull
  private Set<Integer> veglenkerFjernet = new LinkedHashSet<>();

  public static final String JSON_PROPERTY_LENGDE = "lengde";
  @jakarta.annotation.Nullable
  private Double lengde;

  public static final String JSON_PROPERTY_LAST_LENGDE = "lastLengde";
  @jakarta.annotation.Nullable
  private Boolean lastLengde;

  public VeglenkesekvensEndret() {

  }

  public VeglenkesekvensEndret porterErstattet(@jakarta.annotation.Nonnull Set<Veglenkesekvensport> porterErstattet) {
    
    this.porterErstattet = porterErstattet;
    return this;
  }

  public VeglenkesekvensEndret addPorterErstattetItem(Veglenkesekvensport porterErstattetItem) {
    if (this.porterErstattet == null) {
      this.porterErstattet = new LinkedHashSet<>();
    }
    this.porterErstattet.add(porterErstattetItem);
    return this;
  }

  /**
   * Porter som har blitt endret i veglenkesekvensen, identifisert ved nummer.
   * @return porterErstattet
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_PORTER_ERSTATTET)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Set<Veglenkesekvensport> getPorterErstattet() {
    return porterErstattet;
  }


  @JsonDeserialize(as = LinkedHashSet.class)
  @JsonProperty(JSON_PROPERTY_PORTER_ERSTATTET)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setPorterErstattet(@jakarta.annotation.Nonnull Set<Veglenkesekvensport> porterErstattet) {
    this.porterErstattet = porterErstattet;
  }

  public VeglenkesekvensEndret porterFjernet(@jakarta.annotation.Nonnull Set<Integer> porterFjernet) {
    
    this.porterFjernet = porterFjernet;
    return this;
  }

  public VeglenkesekvensEndret addPorterFjernetItem(Integer porterFjernetItem) {
    if (this.porterFjernet == null) {
      this.porterFjernet = new LinkedHashSet<>();
    }
    this.porterFjernet.add(porterFjernetItem);
    return this;
  }

  /**
   * Liste med porter som er fjernet, identifisert ved nummer.
   * @return porterFjernet
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_PORTER_FJERNET)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Set<Integer> getPorterFjernet() {
    return porterFjernet;
  }


  @JsonDeserialize(as = LinkedHashSet.class)
  @JsonProperty(JSON_PROPERTY_PORTER_FJERNET)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setPorterFjernet(@jakarta.annotation.Nonnull Set<Integer> porterFjernet) {
    this.porterFjernet = porterFjernet;
  }

  public VeglenkesekvensEndret veglenkerErstattet(@jakarta.annotation.Nonnull Set<Veglenke> veglenkerErstattet) {
    
    this.veglenkerErstattet = veglenkerErstattet;
    return this;
  }

  public VeglenkesekvensEndret addVeglenkerErstattetItem(Veglenke veglenkerErstattetItem) {
    if (this.veglenkerErstattet == null) {
      this.veglenkerErstattet = new LinkedHashSet<>();
    }
    this.veglenkerErstattet.add(veglenkerErstattetItem);
    return this;
  }

  /**
   * Veglenker som har blitt endret i veglenkesekvensen, identifisert ved nummer.
   * @return veglenkerErstattet
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_VEGLENKER_ERSTATTET)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Set<Veglenke> getVeglenkerErstattet() {
    return veglenkerErstattet;
  }


  @JsonDeserialize(as = LinkedHashSet.class)
  @JsonProperty(JSON_PROPERTY_VEGLENKER_ERSTATTET)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setVeglenkerErstattet(@jakarta.annotation.Nonnull Set<Veglenke> veglenkerErstattet) {
    this.veglenkerErstattet = veglenkerErstattet;
  }

  public VeglenkesekvensEndret veglenkerFjernet(@jakarta.annotation.Nonnull Set<Integer> veglenkerFjernet) {
    
    this.veglenkerFjernet = veglenkerFjernet;
    return this;
  }

  public VeglenkesekvensEndret addVeglenkerFjernetItem(Integer veglenkerFjernetItem) {
    if (this.veglenkerFjernet == null) {
      this.veglenkerFjernet = new LinkedHashSet<>();
    }
    this.veglenkerFjernet.add(veglenkerFjernetItem);
    return this;
  }

  /**
   * Liste med veglenker som er fjernet, identifisert ved nummer.
   * @return veglenkerFjernet
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_VEGLENKER_FJERNET)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Set<Integer> getVeglenkerFjernet() {
    return veglenkerFjernet;
  }


  @JsonDeserialize(as = LinkedHashSet.class)
  @JsonProperty(JSON_PROPERTY_VEGLENKER_FJERNET)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setVeglenkerFjernet(@jakarta.annotation.Nonnull Set<Integer> veglenkerFjernet) {
    this.veglenkerFjernet = veglenkerFjernet;
  }

  public VeglenkesekvensEndret lengde(@jakarta.annotation.Nullable Double lengde) {
    
    this.lengde = lengde;
    return this;
  }

  /**
   * Lengden på veglenkesekvensen i meter. Bare satt hvis endret.
   * @return lengde
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LENGDE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Double getLengde() {
    return lengde;
  }


  @JsonProperty(JSON_PROPERTY_LENGDE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLengde(@jakarta.annotation.Nullable Double lengde) {
    this.lengde = lengde;
  }

  public VeglenkesekvensEndret lastLengde(@jakarta.annotation.Nullable Boolean lastLengde) {
    
    this.lastLengde = lastLengde;
    return this;
  }

  /**
   * Get lastLengde
   * @return lastLengde
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LAST_LENGDE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getLastLengde() {
    return lastLengde;
  }


  @JsonProperty(JSON_PROPERTY_LAST_LENGDE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLastLengde(@jakarta.annotation.Nullable Boolean lastLengde) {
    this.lastLengde = lastLengde;
  }


  @Override
  public VeglenkesekvensEndret type(@jakarta.annotation.Nonnull String type) {
    this.setType(type);
    return this;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    VeglenkesekvensEndret veglenkesekvensEndret = (VeglenkesekvensEndret) o;
    return Objects.equals(this.porterErstattet, veglenkesekvensEndret.porterErstattet) &&
        Objects.equals(this.porterFjernet, veglenkesekvensEndret.porterFjernet) &&
        Objects.equals(this.veglenkerErstattet, veglenkesekvensEndret.veglenkerErstattet) &&
        Objects.equals(this.veglenkerFjernet, veglenkesekvensEndret.veglenkerFjernet) &&
        Objects.equals(this.lengde, veglenkesekvensEndret.lengde) &&
        Objects.equals(this.lastLengde, veglenkesekvensEndret.lastLengde) &&
        super.equals(o);
  }

  @Override
  public int hashCode() {
    return Objects.hash(porterErstattet, porterFjernet, veglenkerErstattet, veglenkerFjernet, lengde, lastLengde, super.hashCode());
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class VeglenkesekvensEndret {\n");
    sb.append("    ").append(toIndentedString(super.toString())).append("\n");
    sb.append("    porterErstattet: ").append(toIndentedString(porterErstattet)).append("\n");
    sb.append("    porterFjernet: ").append(toIndentedString(porterFjernet)).append("\n");
    sb.append("    veglenkerErstattet: ").append(toIndentedString(veglenkerErstattet)).append("\n");
    sb.append("    veglenkerFjernet: ").append(toIndentedString(veglenkerFjernet)).append("\n");
    sb.append("    lengde: ").append(toIndentedString(lengde)).append("\n");
    sb.append("    lastLengde: ").append(toIndentedString(lastLengde)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

