/*
 * NVDB API Les Uberiket
 * Dette API-et brukes til å lese uberikede hendelser, vegobjekter og vegnett. Les mer om bruk av API-et på https://nvdb.atlas.vegvesen.no/produkter/nvdbapil/v1/Uberiket
 *
 * The version of the OpenAPI document: v1
 * Contact: nvdb@vegvesen.no
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package no.vegvesen.nvdb.apiles.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import no.vegvesen.nvdb.apiles.model.Retning;
import no.vegvesen.nvdb.apiles.model.Sideposisjon;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * StedfestingPunkt
 */
@JsonPropertyOrder({
  StedfestingPunkt.JSON_PROPERTY_ID,
  StedfestingPunkt.JSON_PROPERTY_POSISJON,
  StedfestingPunkt.JSON_PROPERTY_RETNING,
  StedfestingPunkt.JSON_PROPERTY_SIDEPOSISJON,
  StedfestingPunkt.JSON_PROPERTY_KJOREFELT
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.14.0")
public class StedfestingPunkt {
  public static final String JSON_PROPERTY_ID = "id";
  @jakarta.annotation.Nonnull
  private Long id;

  public static final String JSON_PROPERTY_POSISJON = "posisjon";
  @jakarta.annotation.Nonnull
  private Double posisjon;

  public static final String JSON_PROPERTY_RETNING = "retning";
  @jakarta.annotation.Nullable
  private Retning retning;

  public static final String JSON_PROPERTY_SIDEPOSISJON = "sideposisjon";
  @jakarta.annotation.Nullable
  private Sideposisjon sideposisjon;

  public static final String JSON_PROPERTY_KJOREFELT = "kjorefelt";
  @jakarta.annotation.Nonnull
  private List<String> kjorefelt = new ArrayList<>();

  public StedfestingPunkt() {
  }

  public StedfestingPunkt id(@jakarta.annotation.Nonnull Long id) {
    
    this.id = id;
    return this;
  }

  /**
   * Get id
   * @return id
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Long getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setId(@jakarta.annotation.Nonnull Long id) {
    this.id = id;
  }

  public StedfestingPunkt posisjon(@jakarta.annotation.Nonnull Double posisjon) {
    
    this.posisjon = posisjon;
    return this;
  }

  /**
   * Get posisjon
   * @return posisjon
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_POSISJON)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Double getPosisjon() {
    return posisjon;
  }


  @JsonProperty(JSON_PROPERTY_POSISJON)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setPosisjon(@jakarta.annotation.Nonnull Double posisjon) {
    this.posisjon = posisjon;
  }

  public StedfestingPunkt retning(@jakarta.annotation.Nullable Retning retning) {
    
    this.retning = retning;
    return this;
  }

  /**
   * Get retning
   * @return retning
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_RETNING)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Retning getRetning() {
    return retning;
  }


  @JsonProperty(JSON_PROPERTY_RETNING)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRetning(@jakarta.annotation.Nullable Retning retning) {
    this.retning = retning;
  }

  public StedfestingPunkt sideposisjon(@jakarta.annotation.Nullable Sideposisjon sideposisjon) {
    
    this.sideposisjon = sideposisjon;
    return this;
  }

  /**
   * Get sideposisjon
   * @return sideposisjon
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SIDEPOSISJON)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Sideposisjon getSideposisjon() {
    return sideposisjon;
  }


  @JsonProperty(JSON_PROPERTY_SIDEPOSISJON)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSideposisjon(@jakarta.annotation.Nullable Sideposisjon sideposisjon) {
    this.sideposisjon = sideposisjon;
  }

  public StedfestingPunkt kjorefelt(@jakarta.annotation.Nonnull List<String> kjorefelt) {
    
    this.kjorefelt = kjorefelt;
    return this;
  }

  public StedfestingPunkt addKjorefeltItem(String kjorefeltItem) {
    if (this.kjorefelt == null) {
      this.kjorefelt = new ArrayList<>();
    }
    this.kjorefelt.add(kjorefeltItem);
    return this;
  }

  /**
   * Get kjorefelt
   * @return kjorefelt
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_KJOREFELT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public List<String> getKjorefelt() {
    return kjorefelt;
  }


  @JsonProperty(JSON_PROPERTY_KJOREFELT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setKjorefelt(@jakarta.annotation.Nonnull List<String> kjorefelt) {
    this.kjorefelt = kjorefelt;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    StedfestingPunkt stedfestingPunkt = (StedfestingPunkt) o;
    return Objects.equals(this.id, stedfestingPunkt.id) &&
        Objects.equals(this.posisjon, stedfestingPunkt.posisjon) &&
        Objects.equals(this.retning, stedfestingPunkt.retning) &&
        Objects.equals(this.sideposisjon, stedfestingPunkt.sideposisjon) &&
        Objects.equals(this.kjorefelt, stedfestingPunkt.kjorefelt);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, posisjon, retning, sideposisjon, kjorefelt);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class StedfestingPunkt {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    posisjon: ").append(toIndentedString(posisjon)).append("\n");
    sb.append("    retning: ").append(toIndentedString(retning)).append("\n");
    sb.append("    sideposisjon: ").append(toIndentedString(sideposisjon)).append("\n");
    sb.append("    kjorefelt: ").append(toIndentedString(kjorefelt)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

