/*
 * NVDB API Les Uberiket
 * Dette API-et brukes til å lese uberikede hendelser, vegobjekter og vegnett. Les mer om bruk av API-et på https://nvdb.atlas.vegvesen.no/produkter/nvdbapil/v1/Uberiket
 *
 * The version of the OpenAPI document: v1
 * Contact: nvdb@vegvesen.no
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package no.vegvesen.nvdb.apiles.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Nodeport
 */
@JsonPropertyOrder({
  Nodeport.JSON_PROPERTY_NUMMER,
  Nodeport.JSON_PROPERTY_VEGLENKESEKVENS_ID,
  Nodeport.JSON_PROPERTY_VEGLENKESEKVENS_PORT_NUMMER
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.14.0")
public class Nodeport {
  public static final String JSON_PROPERTY_NUMMER = "nummer";
  @jakarta.annotation.Nonnull
  private Integer nummer;

  public static final String JSON_PROPERTY_VEGLENKESEKVENS_ID = "veglenkesekvensId";
  @jakarta.annotation.Nonnull
  private Long veglenkesekvensId;

  public static final String JSON_PROPERTY_VEGLENKESEKVENS_PORT_NUMMER = "veglenkesekvensPortNummer";
  @jakarta.annotation.Nonnull
  private Integer veglenkesekvensPortNummer;

  public Nodeport() {
  }

  public Nodeport nummer(@jakarta.annotation.Nonnull Integer nummer) {
    
    this.nummer = nummer;
    return this;
  }

  /**
   * Get nummer
   * @return nummer
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_NUMMER)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getNummer() {
    return nummer;
  }


  @JsonProperty(JSON_PROPERTY_NUMMER)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setNummer(@jakarta.annotation.Nonnull Integer nummer) {
    this.nummer = nummer;
  }

  public Nodeport veglenkesekvensId(@jakarta.annotation.Nonnull Long veglenkesekvensId) {
    
    this.veglenkesekvensId = veglenkesekvensId;
    return this;
  }

  /**
   * Get veglenkesekvensId
   * @return veglenkesekvensId
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_VEGLENKESEKVENS_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Long getVeglenkesekvensId() {
    return veglenkesekvensId;
  }


  @JsonProperty(JSON_PROPERTY_VEGLENKESEKVENS_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setVeglenkesekvensId(@jakarta.annotation.Nonnull Long veglenkesekvensId) {
    this.veglenkesekvensId = veglenkesekvensId;
  }

  public Nodeport veglenkesekvensPortNummer(@jakarta.annotation.Nonnull Integer veglenkesekvensPortNummer) {
    
    this.veglenkesekvensPortNummer = veglenkesekvensPortNummer;
    return this;
  }

  /**
   * Get veglenkesekvensPortNummer
   * @return veglenkesekvensPortNummer
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_VEGLENKESEKVENS_PORT_NUMMER)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getVeglenkesekvensPortNummer() {
    return veglenkesekvensPortNummer;
  }


  @JsonProperty(JSON_PROPERTY_VEGLENKESEKVENS_PORT_NUMMER)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setVeglenkesekvensPortNummer(@jakarta.annotation.Nonnull Integer veglenkesekvensPortNummer) {
    this.veglenkesekvensPortNummer = veglenkesekvensPortNummer;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Nodeport nodeport = (Nodeport) o;
    return Objects.equals(this.nummer, nodeport.nummer) &&
        Objects.equals(this.veglenkesekvensId, nodeport.veglenkesekvensId) &&
        Objects.equals(this.veglenkesekvensPortNummer, nodeport.veglenkesekvensPortNummer);
  }

  @Override
  public int hashCode() {
    return Objects.hash(nummer, veglenkesekvensId, veglenkesekvensPortNummer);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Nodeport {\n");
    sb.append("    nummer: ").append(toIndentedString(nummer)).append("\n");
    sb.append("    veglenkesekvensId: ").append(toIndentedString(veglenkesekvensId)).append("\n");
    sb.append("    veglenkesekvensPortNummer: ").append(toIndentedString(veglenkesekvensPortNummer)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

