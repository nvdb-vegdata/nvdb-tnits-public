/*
 * NVDB API Les Uberiket
 * Dette API-et brukes til å lese uberikede hendelser, vegobjekter og vegnett. Les mer om bruk av API-et på https://nvdb.atlas.vegvesen.no/produkter/nvdbapil/v1/Uberiket
 *
 * The version of the OpenAPI document: v1
 * Contact: nvdb@vegvesen.no
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package no.vegvesen.nvdb.apiles.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Veglenkesekvensport
 */
@JsonPropertyOrder({
  Veglenkesekvensport.JSON_PROPERTY_NUMMER,
  Veglenkesekvensport.JSON_PROPERTY_NODE_ID,
  Veglenkesekvensport.JSON_PROPERTY_NODE_PORT_NUMMER,
  Veglenkesekvensport.JSON_PROPERTY_POSISJON
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.14.0")
public class Veglenkesekvensport {
  public static final String JSON_PROPERTY_NUMMER = "nummer";
  @jakarta.annotation.Nonnull
  private Integer nummer;

  public static final String JSON_PROPERTY_NODE_ID = "nodeId";
  @jakarta.annotation.Nonnull
  private Long nodeId;

  public static final String JSON_PROPERTY_NODE_PORT_NUMMER = "nodePortNummer";
  @jakarta.annotation.Nonnull
  private Integer nodePortNummer;

  public static final String JSON_PROPERTY_POSISJON = "posisjon";
  @jakarta.annotation.Nonnull
  private Double posisjon;

  public Veglenkesekvensport() {
  }

  public Veglenkesekvensport nummer(@jakarta.annotation.Nonnull Integer nummer) {
    
    this.nummer = nummer;
    return this;
  }

  /**
   * Get nummer
   * @return nummer
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_NUMMER)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getNummer() {
    return nummer;
  }


  @JsonProperty(JSON_PROPERTY_NUMMER)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setNummer(@jakarta.annotation.Nonnull Integer nummer) {
    this.nummer = nummer;
  }

  public Veglenkesekvensport nodeId(@jakarta.annotation.Nonnull Long nodeId) {
    
    this.nodeId = nodeId;
    return this;
  }

  /**
   * Get nodeId
   * @return nodeId
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_NODE_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Long getNodeId() {
    return nodeId;
  }


  @JsonProperty(JSON_PROPERTY_NODE_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setNodeId(@jakarta.annotation.Nonnull Long nodeId) {
    this.nodeId = nodeId;
  }

  public Veglenkesekvensport nodePortNummer(@jakarta.annotation.Nonnull Integer nodePortNummer) {
    
    this.nodePortNummer = nodePortNummer;
    return this;
  }

  /**
   * Get nodePortNummer
   * @return nodePortNummer
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_NODE_PORT_NUMMER)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getNodePortNummer() {
    return nodePortNummer;
  }


  @JsonProperty(JSON_PROPERTY_NODE_PORT_NUMMER)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setNodePortNummer(@jakarta.annotation.Nonnull Integer nodePortNummer) {
    this.nodePortNummer = nodePortNummer;
  }

  public Veglenkesekvensport posisjon(@jakarta.annotation.Nonnull Double posisjon) {
    
    this.posisjon = posisjon;
    return this;
  }

  /**
   * Get posisjon
   * @return posisjon
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_POSISJON)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Double getPosisjon() {
    return posisjon;
  }


  @JsonProperty(JSON_PROPERTY_POSISJON)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setPosisjon(@jakarta.annotation.Nonnull Double posisjon) {
    this.posisjon = posisjon;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Veglenkesekvensport veglenkesekvensport = (Veglenkesekvensport) o;
    return Objects.equals(this.nummer, veglenkesekvensport.nummer) &&
        Objects.equals(this.nodeId, veglenkesekvensport.nodeId) &&
        Objects.equals(this.nodePortNummer, veglenkesekvensport.nodePortNummer) &&
        Objects.equals(this.posisjon, veglenkesekvensport.posisjon);
  }

  @Override
  public int hashCode() {
    return Objects.hash(nummer, nodeId, nodePortNummer, posisjon);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Veglenkesekvensport {\n");
    sb.append("    nummer: ").append(toIndentedString(nummer)).append("\n");
    sb.append("    nodeId: ").append(toIndentedString(nodeId)).append("\n");
    sb.append("    nodePortNummer: ").append(toIndentedString(nodePortNummer)).append("\n");
    sb.append("    posisjon: ").append(toIndentedString(posisjon)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

