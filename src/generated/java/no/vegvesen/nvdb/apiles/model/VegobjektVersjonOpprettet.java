/*
 * NVDB API Les Uberiket
 * Dette API-et brukes til å lese uberikede hendelser, vegobjekter og vegnett. Les mer om bruk av API-et på https://nvdb.atlas.vegvesen.no/produkter/nvdbapil/v1/Uberiket
 *
 * The version of the OpenAPI document: v1
 * Contact: nvdb@vegvesen.no
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package no.vegvesen.nvdb.apiles.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonSubTypes;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import no.vegvesen.nvdb.apiles.model.VegobjektHendelse;
import no.vegvesen.nvdb.apiles.model.VegobjektVersjon;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * VegobjektVersjonOpprettet
 */
@JsonPropertyOrder({
  VegobjektVersjonOpprettet.JSON_PROPERTY_VERSJON
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.14.0")
@JsonIgnoreProperties(
  value = "type", // ignore manually set type, it will be automatically generated by Jackson during serialization
  allowSetters = true // allows the type to be set during deserialization
)
@JsonTypeInfo(use = JsonTypeInfo.Id.NAME, include = JsonTypeInfo.As.PROPERTY, property = "type", visible = true)

public class VegobjektVersjonOpprettet extends VegobjektHendelse {
  public static final String JSON_PROPERTY_VERSJON = "versjon";
  @jakarta.annotation.Nonnull
  private VegobjektVersjon versjon;

  public VegobjektVersjonOpprettet() {

  }

  public VegobjektVersjonOpprettet versjon(@jakarta.annotation.Nonnull VegobjektVersjon versjon) {
    
    this.versjon = versjon;
    return this;
  }

  /**
   * Innholdet til versjonen av vegobjektet som ble opprettet
   * @return versjon
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_VERSJON)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public VegobjektVersjon getVersjon() {
    return versjon;
  }


  @JsonProperty(JSON_PROPERTY_VERSJON)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setVersjon(@jakarta.annotation.Nonnull VegobjektVersjon versjon) {
    this.versjon = versjon;
  }


  @Override
  public VegobjektVersjonOpprettet type(@jakarta.annotation.Nonnull String type) {
    this.setType(type);
    return this;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    VegobjektVersjonOpprettet vegobjektVersjonOpprettet = (VegobjektVersjonOpprettet) o;
    return Objects.equals(this.versjon, vegobjektVersjonOpprettet.versjon) &&
        super.equals(o);
  }

  @Override
  public int hashCode() {
    return Objects.hash(versjon, super.hashCode());
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class VegobjektVersjonOpprettet {\n");
    sb.append("    ").append(toIndentedString(super.toString())).append("\n");
    sb.append("    versjon: ").append(toIndentedString(versjon)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

