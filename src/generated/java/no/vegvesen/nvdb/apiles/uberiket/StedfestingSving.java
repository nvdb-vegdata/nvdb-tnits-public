/*
 * NVDB API Les Uberiket
 * Dette API-et brukes til å lese uberikede hendelser, vegobjekter og vegnett. Les mer om bruk av API-et på https://nvdb.atlas.vegvesen.no/produkter/nvdbapil/v1/Uberiket
 *
 * The version of the OpenAPI document: v1
 * Contact: nvdb@vegvesen.no
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package no.vegvesen.nvdb.apiles.uberiket;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonSubTypes;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import no.vegvesen.nvdb.apiles.uberiket.Stedfesting;
import no.vegvesen.nvdb.apiles.uberiket.StedfestingPunkt;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * StedfestingSving
 */
@JsonPropertyOrder({
  StedfestingSving.JSON_PROPERTY_ID,
  StedfestingSving.JSON_PROPERTY_STARTPUNKT,
  StedfestingSving.JSON_PROPERTY_SLUTTPUNKT
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.14.0")
@JsonIgnoreProperties(
  value = "type", // ignore manually set type, it will be automatically generated by Jackson during serialization
  allowSetters = true // allows the type to be set during deserialization
)
@JsonTypeInfo(use = JsonTypeInfo.Id.NAME, include = JsonTypeInfo.As.PROPERTY, property = "type", visible = true)

public class StedfestingSving extends Stedfesting {
  public static final String JSON_PROPERTY_ID = "id";
  @jakarta.annotation.Nonnull
  private Long id;

  public static final String JSON_PROPERTY_STARTPUNKT = "startpunkt";
  @jakarta.annotation.Nonnull
  private StedfestingPunkt startpunkt;

  public static final String JSON_PROPERTY_SLUTTPUNKT = "sluttpunkt";
  @jakarta.annotation.Nonnull
  private StedfestingPunkt sluttpunkt;

  public StedfestingSving() {

  }

  public StedfestingSving id(@jakarta.annotation.Nonnull Long id) {
    
    this.id = id;
    return this;
  }

  /**
   * Get id
   * @return id
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Long getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setId(@jakarta.annotation.Nonnull Long id) {
    this.id = id;
  }

  public StedfestingSving startpunkt(@jakarta.annotation.Nonnull StedfestingPunkt startpunkt) {
    
    this.startpunkt = startpunkt;
    return this;
  }

  /**
   * Get startpunkt
   * @return startpunkt
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_STARTPUNKT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public StedfestingPunkt getStartpunkt() {
    return startpunkt;
  }


  @JsonProperty(JSON_PROPERTY_STARTPUNKT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setStartpunkt(@jakarta.annotation.Nonnull StedfestingPunkt startpunkt) {
    this.startpunkt = startpunkt;
  }

  public StedfestingSving sluttpunkt(@jakarta.annotation.Nonnull StedfestingPunkt sluttpunkt) {
    
    this.sluttpunkt = sluttpunkt;
    return this;
  }

  /**
   * Get sluttpunkt
   * @return sluttpunkt
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_SLUTTPUNKT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public StedfestingPunkt getSluttpunkt() {
    return sluttpunkt;
  }


  @JsonProperty(JSON_PROPERTY_SLUTTPUNKT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setSluttpunkt(@jakarta.annotation.Nonnull StedfestingPunkt sluttpunkt) {
    this.sluttpunkt = sluttpunkt;
  }


  @Override
  public StedfestingSving type(@jakarta.annotation.Nonnull String type) {
    this.setType(type);
    return this;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    StedfestingSving stedfestingSving = (StedfestingSving) o;
    return Objects.equals(this.id, stedfestingSving.id) &&
        Objects.equals(this.startpunkt, stedfestingSving.startpunkt) &&
        Objects.equals(this.sluttpunkt, stedfestingSving.sluttpunkt) &&
        super.equals(o);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, startpunkt, sluttpunkt, super.hashCode());
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class StedfestingSving {\n");
    sb.append("    ").append(toIndentedString(super.toString())).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    startpunkt: ").append(toIndentedString(startpunkt)).append("\n");
    sb.append("    sluttpunkt: ").append(toIndentedString(sluttpunkt)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

