/*
 * NVDB API Les Uberiket
 * Dette API-et brukes til å lese uberikede hendelser, vegobjekter og vegnett. Les mer om bruk av API-et på https://nvdb.atlas.vegvesen.no/produkter/nvdbapil/v1/Uberiket
 *
 * The version of the OpenAPI document: v1
 * Contact: nvdb@vegvesen.no
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package no.vegvesen.nvdb.apiles.uberiket;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.time.LocalDate;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import no.vegvesen.nvdb.apiles.uberiket.Detaljniva;
import no.vegvesen.nvdb.apiles.uberiket.Geometristruktur;
import no.vegvesen.nvdb.apiles.uberiket.Gyldighetsperiode;
import no.vegvesen.nvdb.apiles.uberiket.Malemetode;
import no.vegvesen.nvdb.apiles.uberiket.StedfestingLinje;
import no.vegvesen.nvdb.apiles.uberiket.Topologiniva;
import no.vegvesen.nvdb.apiles.uberiket.TypeVeg;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Veglenke
 */
@JsonPropertyOrder({
  Veglenke.JSON_PROPERTY_NUMMER,
  Veglenke.JSON_PROPERTY_GYLDIGHETSPERIODE,
  Veglenke.JSON_PROPERTY_KONNEKTERING,
  Veglenke.JSON_PROPERTY_TOPOLOGINIVA,
  Veglenke.JSON_PROPERTY_MALEDATO,
  Veglenke.JSON_PROPERTY_MALEMETODE,
  Veglenke.JSON_PROPERTY_DETALJNIVA,
  Veglenke.JSON_PROPERTY_TYPE_VEG,
  Veglenke.JSON_PROPERTY_SUPERSTEDFESTING,
  Veglenke.JSON_PROPERTY_STARTPORT,
  Veglenke.JSON_PROPERTY_SLUTTPORT,
  Veglenke.JSON_PROPERTY_KOMMUNE,
  Veglenke.JSON_PROPERTY_GEOMETRI,
  Veglenke.JSON_PROPERTY_LENGDE,
  Veglenke.JSON_PROPERTY_FELTOVERSIKT
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.14.0")
public class Veglenke {
  public static final String JSON_PROPERTY_NUMMER = "nummer";
  @jakarta.annotation.Nonnull
  private Integer nummer;

  public static final String JSON_PROPERTY_GYLDIGHETSPERIODE = "gyldighetsperiode";
  @jakarta.annotation.Nonnull
  private Gyldighetsperiode gyldighetsperiode;

  public static final String JSON_PROPERTY_KONNEKTERING = "konnektering";
  @jakarta.annotation.Nonnull
  private Boolean konnektering;

  public static final String JSON_PROPERTY_TOPOLOGINIVA = "topologiniva";
  @jakarta.annotation.Nonnull
  private Topologiniva topologiniva;

  public static final String JSON_PROPERTY_MALEDATO = "maledato";
  @jakarta.annotation.Nullable
  private LocalDate maledato;

  public static final String JSON_PROPERTY_MALEMETODE = "malemetode";
  @jakarta.annotation.Nonnull
  private Malemetode malemetode;

  public static final String JSON_PROPERTY_DETALJNIVA = "detaljniva";
  @jakarta.annotation.Nonnull
  private Detaljniva detaljniva;

  public static final String JSON_PROPERTY_TYPE_VEG = "typeVeg";
  @jakarta.annotation.Nonnull
  private TypeVeg typeVeg;

  public static final String JSON_PROPERTY_SUPERSTEDFESTING = "superstedfesting";
  @jakarta.annotation.Nullable
  private StedfestingLinje superstedfesting;

  public static final String JSON_PROPERTY_STARTPORT = "startport";
  @jakarta.annotation.Nonnull
  private Integer startport;

  public static final String JSON_PROPERTY_SLUTTPORT = "sluttport";
  @jakarta.annotation.Nonnull
  private Integer sluttport;

  public static final String JSON_PROPERTY_KOMMUNE = "kommune";
  @jakarta.annotation.Nonnull
  private Integer kommune;

  public static final String JSON_PROPERTY_GEOMETRI = "geometri";
  @jakarta.annotation.Nonnull
  private Geometristruktur geometri;

  public static final String JSON_PROPERTY_LENGDE = "lengde";
  @jakarta.annotation.Nonnull
  private Double lengde;

  public static final String JSON_PROPERTY_FELTOVERSIKT = "feltoversikt";
  @jakarta.annotation.Nonnull
  private List<String> feltoversikt = new ArrayList<>();

  public Veglenke() {
  }

  public Veglenke nummer(@jakarta.annotation.Nonnull Integer nummer) {
    
    this.nummer = nummer;
    return this;
  }

  /**
   * Get nummer
   * @return nummer
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_NUMMER)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getNummer() {
    return nummer;
  }


  @JsonProperty(JSON_PROPERTY_NUMMER)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setNummer(@jakarta.annotation.Nonnull Integer nummer) {
    this.nummer = nummer;
  }

  public Veglenke gyldighetsperiode(@jakarta.annotation.Nonnull Gyldighetsperiode gyldighetsperiode) {
    
    this.gyldighetsperiode = gyldighetsperiode;
    return this;
  }

  /**
   * Get gyldighetsperiode
   * @return gyldighetsperiode
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_GYLDIGHETSPERIODE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Gyldighetsperiode getGyldighetsperiode() {
    return gyldighetsperiode;
  }


  @JsonProperty(JSON_PROPERTY_GYLDIGHETSPERIODE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setGyldighetsperiode(@jakarta.annotation.Nonnull Gyldighetsperiode gyldighetsperiode) {
    this.gyldighetsperiode = gyldighetsperiode;
  }

  public Veglenke konnektering(@jakarta.annotation.Nonnull Boolean konnektering) {
    
    this.konnektering = konnektering;
    return this;
  }

  /**
   * Get konnektering
   * @return konnektering
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_KONNEKTERING)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getKonnektering() {
    return konnektering;
  }


  @JsonProperty(JSON_PROPERTY_KONNEKTERING)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setKonnektering(@jakarta.annotation.Nonnull Boolean konnektering) {
    this.konnektering = konnektering;
  }

  public Veglenke topologiniva(@jakarta.annotation.Nonnull Topologiniva topologiniva) {
    
    this.topologiniva = topologiniva;
    return this;
  }

  /**
   * Get topologiniva
   * @return topologiniva
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_TOPOLOGINIVA)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Topologiniva getTopologiniva() {
    return topologiniva;
  }


  @JsonProperty(JSON_PROPERTY_TOPOLOGINIVA)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setTopologiniva(@jakarta.annotation.Nonnull Topologiniva topologiniva) {
    this.topologiniva = topologiniva;
  }

  public Veglenke maledato(@jakarta.annotation.Nullable LocalDate maledato) {
    
    this.maledato = maledato;
    return this;
  }

  /**
   * Get maledato
   * @return maledato
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MALEDATO)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public LocalDate getMaledato() {
    return maledato;
  }


  @JsonProperty(JSON_PROPERTY_MALEDATO)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMaledato(@jakarta.annotation.Nullable LocalDate maledato) {
    this.maledato = maledato;
  }

  public Veglenke malemetode(@jakarta.annotation.Nonnull Malemetode malemetode) {
    
    this.malemetode = malemetode;
    return this;
  }

  /**
   * Get malemetode
   * @return malemetode
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_MALEMETODE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Malemetode getMalemetode() {
    return malemetode;
  }


  @JsonProperty(JSON_PROPERTY_MALEMETODE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setMalemetode(@jakarta.annotation.Nonnull Malemetode malemetode) {
    this.malemetode = malemetode;
  }

  public Veglenke detaljniva(@jakarta.annotation.Nonnull Detaljniva detaljniva) {
    
    this.detaljniva = detaljniva;
    return this;
  }

  /**
   * Get detaljniva
   * @return detaljniva
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_DETALJNIVA)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Detaljniva getDetaljniva() {
    return detaljniva;
  }


  @JsonProperty(JSON_PROPERTY_DETALJNIVA)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setDetaljniva(@jakarta.annotation.Nonnull Detaljniva detaljniva) {
    this.detaljniva = detaljniva;
  }

  public Veglenke typeVeg(@jakarta.annotation.Nonnull TypeVeg typeVeg) {
    
    this.typeVeg = typeVeg;
    return this;
  }

  /**
   * Get typeVeg
   * @return typeVeg
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_TYPE_VEG)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public TypeVeg getTypeVeg() {
    return typeVeg;
  }


  @JsonProperty(JSON_PROPERTY_TYPE_VEG)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setTypeVeg(@jakarta.annotation.Nonnull TypeVeg typeVeg) {
    this.typeVeg = typeVeg;
  }

  public Veglenke superstedfesting(@jakarta.annotation.Nullable StedfestingLinje superstedfesting) {
    
    this.superstedfesting = superstedfesting;
    return this;
  }

  /**
   * Get superstedfesting
   * @return superstedfesting
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SUPERSTEDFESTING)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public StedfestingLinje getSuperstedfesting() {
    return superstedfesting;
  }


  @JsonProperty(JSON_PROPERTY_SUPERSTEDFESTING)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSuperstedfesting(@jakarta.annotation.Nullable StedfestingLinje superstedfesting) {
    this.superstedfesting = superstedfesting;
  }

  public Veglenke startport(@jakarta.annotation.Nonnull Integer startport) {
    
    this.startport = startport;
    return this;
  }

  /**
   * Get startport
   * @return startport
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_STARTPORT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getStartport() {
    return startport;
  }


  @JsonProperty(JSON_PROPERTY_STARTPORT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setStartport(@jakarta.annotation.Nonnull Integer startport) {
    this.startport = startport;
  }

  public Veglenke sluttport(@jakarta.annotation.Nonnull Integer sluttport) {
    
    this.sluttport = sluttport;
    return this;
  }

  /**
   * Get sluttport
   * @return sluttport
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_SLUTTPORT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getSluttport() {
    return sluttport;
  }


  @JsonProperty(JSON_PROPERTY_SLUTTPORT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setSluttport(@jakarta.annotation.Nonnull Integer sluttport) {
    this.sluttport = sluttport;
  }

  public Veglenke kommune(@jakarta.annotation.Nonnull Integer kommune) {
    
    this.kommune = kommune;
    return this;
  }

  /**
   * Get kommune
   * @return kommune
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_KOMMUNE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getKommune() {
    return kommune;
  }


  @JsonProperty(JSON_PROPERTY_KOMMUNE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setKommune(@jakarta.annotation.Nonnull Integer kommune) {
    this.kommune = kommune;
  }

  public Veglenke geometri(@jakarta.annotation.Nonnull Geometristruktur geometri) {
    
    this.geometri = geometri;
    return this;
  }

  /**
   * Get geometri
   * @return geometri
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_GEOMETRI)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Geometristruktur getGeometri() {
    return geometri;
  }


  @JsonProperty(JSON_PROPERTY_GEOMETRI)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setGeometri(@jakarta.annotation.Nonnull Geometristruktur geometri) {
    this.geometri = geometri;
  }

  public Veglenke lengde(@jakarta.annotation.Nonnull Double lengde) {
    
    this.lengde = lengde;
    return this;
  }

  /**
   * Get lengde
   * @return lengde
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_LENGDE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Double getLengde() {
    return lengde;
  }


  @JsonProperty(JSON_PROPERTY_LENGDE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setLengde(@jakarta.annotation.Nonnull Double lengde) {
    this.lengde = lengde;
  }

  public Veglenke feltoversikt(@jakarta.annotation.Nonnull List<String> feltoversikt) {
    
    this.feltoversikt = feltoversikt;
    return this;
  }

  public Veglenke addFeltoversiktItem(String feltoversiktItem) {
    if (this.feltoversikt == null) {
      this.feltoversikt = new ArrayList<>();
    }
    this.feltoversikt.add(feltoversiktItem);
    return this;
  }

  /**
   * Get feltoversikt
   * @return feltoversikt
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_FELTOVERSIKT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public List<String> getFeltoversikt() {
    return feltoversikt;
  }


  @JsonProperty(JSON_PROPERTY_FELTOVERSIKT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setFeltoversikt(@jakarta.annotation.Nonnull List<String> feltoversikt) {
    this.feltoversikt = feltoversikt;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Veglenke veglenke = (Veglenke) o;
    return Objects.equals(this.nummer, veglenke.nummer) &&
        Objects.equals(this.gyldighetsperiode, veglenke.gyldighetsperiode) &&
        Objects.equals(this.konnektering, veglenke.konnektering) &&
        Objects.equals(this.topologiniva, veglenke.topologiniva) &&
        Objects.equals(this.maledato, veglenke.maledato) &&
        Objects.equals(this.malemetode, veglenke.malemetode) &&
        Objects.equals(this.detaljniva, veglenke.detaljniva) &&
        Objects.equals(this.typeVeg, veglenke.typeVeg) &&
        Objects.equals(this.superstedfesting, veglenke.superstedfesting) &&
        Objects.equals(this.startport, veglenke.startport) &&
        Objects.equals(this.sluttport, veglenke.sluttport) &&
        Objects.equals(this.kommune, veglenke.kommune) &&
        Objects.equals(this.geometri, veglenke.geometri) &&
        Objects.equals(this.lengde, veglenke.lengde) &&
        Objects.equals(this.feltoversikt, veglenke.feltoversikt);
  }

  @Override
  public int hashCode() {
    return Objects.hash(nummer, gyldighetsperiode, konnektering, topologiniva, maledato, malemetode, detaljniva, typeVeg, superstedfesting, startport, sluttport, kommune, geometri, lengde, feltoversikt);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Veglenke {\n");
    sb.append("    nummer: ").append(toIndentedString(nummer)).append("\n");
    sb.append("    gyldighetsperiode: ").append(toIndentedString(gyldighetsperiode)).append("\n");
    sb.append("    konnektering: ").append(toIndentedString(konnektering)).append("\n");
    sb.append("    topologiniva: ").append(toIndentedString(topologiniva)).append("\n");
    sb.append("    maledato: ").append(toIndentedString(maledato)).append("\n");
    sb.append("    malemetode: ").append(toIndentedString(malemetode)).append("\n");
    sb.append("    detaljniva: ").append(toIndentedString(detaljniva)).append("\n");
    sb.append("    typeVeg: ").append(toIndentedString(typeVeg)).append("\n");
    sb.append("    superstedfesting: ").append(toIndentedString(superstedfesting)).append("\n");
    sb.append("    startport: ").append(toIndentedString(startport)).append("\n");
    sb.append("    sluttport: ").append(toIndentedString(sluttport)).append("\n");
    sb.append("    kommune: ").append(toIndentedString(kommune)).append("\n");
    sb.append("    geometri: ").append(toIndentedString(geometri)).append("\n");
    sb.append("    lengde: ").append(toIndentedString(lengde)).append("\n");
    sb.append("    feltoversikt: ").append(toIndentedString(feltoversikt)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

