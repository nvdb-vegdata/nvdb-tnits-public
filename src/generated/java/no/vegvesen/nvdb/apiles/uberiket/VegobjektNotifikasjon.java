/*
 * NVDB API Les Uberiket
 * Dette API-et brukes til 책 lese uberikede hendelser, vegobjekter og vegnett. Les mer om bruk av API-et p책 https://nvdb.atlas.vegvesen.no/produkter/nvdbapil/v1/Uberiket
 *
 * The version of the OpenAPI document: v1
 * Contact: nvdb@vegvesen.no
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package no.vegvesen.nvdb.apiles.uberiket;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonSubTypes;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.time.OffsetDateTime;
import no.vegvesen.nvdb.apiles.uberiket.Notifikasjon;
import no.vegvesen.nvdb.apiles.uberiket.Notifikasjonstype;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * VegobjektNotifikasjon
 */
@JsonPropertyOrder({
  VegobjektNotifikasjon.JSON_PROPERTY_HENDELSE_ID,
  VegobjektNotifikasjon.JSON_PROPERTY_HENDELSE_TYPE,
  VegobjektNotifikasjon.JSON_PROPERTY_VEGOBJEKT_ID,
  VegobjektNotifikasjon.JSON_PROPERTY_VEGOBJEKT_TYPE_ID,
  VegobjektNotifikasjon.JSON_PROPERTY_VEGOBJEKT_VERSJON,
  VegobjektNotifikasjon.JSON_PROPERTY_TIDSPUNKT
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.14.0")
@JsonIgnoreProperties(
  value = "notifikasjonstype", // ignore manually set notifikasjonstype, it will be automatically generated by Jackson during serialization
  allowSetters = true // allows the notifikasjonstype to be set during deserialization
)
@JsonTypeInfo(use = JsonTypeInfo.Id.NAME, include = JsonTypeInfo.As.PROPERTY, property = "notifikasjonstype", visible = true)

public class VegobjektNotifikasjon extends Notifikasjon {
  public static final String JSON_PROPERTY_HENDELSE_ID = "hendelseId";
  @jakarta.annotation.Nonnull
  private Long hendelseId;

  public static final String JSON_PROPERTY_HENDELSE_TYPE = "hendelseType";
  @jakarta.annotation.Nonnull
  private String hendelseType;

  public static final String JSON_PROPERTY_VEGOBJEKT_ID = "vegobjektId";
  @jakarta.annotation.Nonnull
  private Long vegobjektId;

  public static final String JSON_PROPERTY_VEGOBJEKT_TYPE_ID = "vegobjektTypeId";
  @jakarta.annotation.Nonnull
  private Integer vegobjektTypeId;

  public static final String JSON_PROPERTY_VEGOBJEKT_VERSJON = "vegobjektVersjon";
  @jakarta.annotation.Nonnull
  private Integer vegobjektVersjon;

  public static final String JSON_PROPERTY_TIDSPUNKT = "tidspunkt";
  @jakarta.annotation.Nonnull
  private OffsetDateTime tidspunkt;

  public VegobjektNotifikasjon() {

  }

  public VegobjektNotifikasjon hendelseId(@jakarta.annotation.Nonnull Long hendelseId) {
    
    this.hendelseId = hendelseId;
    return this;
  }

  /**
   * Unik id for hendelsen
   * @return hendelseId
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_HENDELSE_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Long getHendelseId() {
    return hendelseId;
  }


  @JsonProperty(JSON_PROPERTY_HENDELSE_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setHendelseId(@jakarta.annotation.Nonnull Long hendelseId) {
    this.hendelseId = hendelseId;
  }

  public VegobjektNotifikasjon hendelseType(@jakarta.annotation.Nonnull String hendelseType) {
    
    this.hendelseType = hendelseType;
    return this;
  }

  /**
   * Navnet p책 hendelsestypen: VegobjektImportert, VegobjektVersjonOpprettet, VegobjektVersjonEndret eller VegobjektVersjonFjernet
   * @return hendelseType
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_HENDELSE_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getHendelseType() {
    return hendelseType;
  }


  @JsonProperty(JSON_PROPERTY_HENDELSE_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setHendelseType(@jakarta.annotation.Nonnull String hendelseType) {
    this.hendelseType = hendelseType;
  }

  public VegobjektNotifikasjon vegobjektId(@jakarta.annotation.Nonnull Long vegobjektId) {
    
    this.vegobjektId = vegobjektId;
    return this;
  }

  /**
   * Id-en til vegobjektet som hendelsen gjelder
   * @return vegobjektId
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_VEGOBJEKT_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Long getVegobjektId() {
    return vegobjektId;
  }


  @JsonProperty(JSON_PROPERTY_VEGOBJEKT_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setVegobjektId(@jakarta.annotation.Nonnull Long vegobjektId) {
    this.vegobjektId = vegobjektId;
  }

  public VegobjektNotifikasjon vegobjektTypeId(@jakarta.annotation.Nonnull Integer vegobjektTypeId) {
    
    this.vegobjektTypeId = vegobjektTypeId;
    return this;
  }

  /**
   * Vegobjekttypeid-en til vegobjektet som hendelsen gjelder
   * @return vegobjektTypeId
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_VEGOBJEKT_TYPE_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getVegobjektTypeId() {
    return vegobjektTypeId;
  }


  @JsonProperty(JSON_PROPERTY_VEGOBJEKT_TYPE_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setVegobjektTypeId(@jakarta.annotation.Nonnull Integer vegobjektTypeId) {
    this.vegobjektTypeId = vegobjektTypeId;
  }

  public VegobjektNotifikasjon vegobjektVersjon(@jakarta.annotation.Nonnull Integer vegobjektVersjon) {
    
    this.vegobjektVersjon = vegobjektVersjon;
    return this;
  }

  /**
   * Versjon av vegobjektet som hendelsen gjelder. Versjonen er 0 n책r hendelsen er VegobjektImportert
   * @return vegobjektVersjon
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_VEGOBJEKT_VERSJON)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getVegobjektVersjon() {
    return vegobjektVersjon;
  }


  @JsonProperty(JSON_PROPERTY_VEGOBJEKT_VERSJON)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setVegobjektVersjon(@jakarta.annotation.Nonnull Integer vegobjektVersjon) {
    this.vegobjektVersjon = vegobjektVersjon;
  }

  public VegobjektNotifikasjon tidspunkt(@jakarta.annotation.Nonnull OffsetDateTime tidspunkt) {
    
    this.tidspunkt = tidspunkt;
    return this;
  }

  /**
   * Tidspunktet hendelsen ble opprettet
   * @return tidspunkt
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_TIDSPUNKT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public OffsetDateTime getTidspunkt() {
    return tidspunkt;
  }


  @JsonProperty(JSON_PROPERTY_TIDSPUNKT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setTidspunkt(@jakarta.annotation.Nonnull OffsetDateTime tidspunkt) {
    this.tidspunkt = tidspunkt;
  }


  @Override
  public VegobjektNotifikasjon notifikasjonstype(@jakarta.annotation.Nonnull Notifikasjonstype notifikasjonstype) {
    this.setNotifikasjonstype(notifikasjonstype);
    return this;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    VegobjektNotifikasjon vegobjektNotifikasjon = (VegobjektNotifikasjon) o;
    return Objects.equals(this.hendelseId, vegobjektNotifikasjon.hendelseId) &&
        Objects.equals(this.hendelseType, vegobjektNotifikasjon.hendelseType) &&
        Objects.equals(this.vegobjektId, vegobjektNotifikasjon.vegobjektId) &&
        Objects.equals(this.vegobjektTypeId, vegobjektNotifikasjon.vegobjektTypeId) &&
        Objects.equals(this.vegobjektVersjon, vegobjektNotifikasjon.vegobjektVersjon) &&
        Objects.equals(this.tidspunkt, vegobjektNotifikasjon.tidspunkt) &&
        super.equals(o);
  }

  @Override
  public int hashCode() {
    return Objects.hash(hendelseId, hendelseType, vegobjektId, vegobjektTypeId, vegobjektVersjon, tidspunkt, super.hashCode());
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class VegobjektNotifikasjon {\n");
    sb.append("    ").append(toIndentedString(super.toString())).append("\n");
    sb.append("    hendelseId: ").append(toIndentedString(hendelseId)).append("\n");
    sb.append("    hendelseType: ").append(toIndentedString(hendelseType)).append("\n");
    sb.append("    vegobjektId: ").append(toIndentedString(vegobjektId)).append("\n");
    sb.append("    vegobjektTypeId: ").append(toIndentedString(vegobjektTypeId)).append("\n");
    sb.append("    vegobjektVersjon: ").append(toIndentedString(vegobjektVersjon)).append("\n");
    sb.append("    tidspunkt: ").append(toIndentedString(tidspunkt)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

