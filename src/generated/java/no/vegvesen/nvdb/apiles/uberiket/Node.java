/*
 * NVDB API Les Uberiket
 * Dette API-et brukes til å lese uberikede hendelser, vegobjekter og vegnett. Les mer om bruk av API-et på https://nvdb.atlas.vegvesen.no/produkter/nvdbapil/v1/Uberiket
 *
 * The version of the OpenAPI document: v1
 * Contact: nvdb@vegvesen.no
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package no.vegvesen.nvdb.apiles.uberiket;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import no.vegvesen.nvdb.apiles.uberiket.Geometristruktur;
import no.vegvesen.nvdb.apiles.uberiket.Gyldighetsperiode;
import no.vegvesen.nvdb.apiles.uberiket.Nodeport;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Node
 */
@JsonPropertyOrder({
  Node.JSON_PROPERTY_ID,
  Node.JSON_PROPERTY_PORTER,
  Node.JSON_PROPERTY_GYLDIGHETSPERIODE,
  Node.JSON_PROPERTY_GEOMETRI,
  Node.JSON_PROPERTY_SIST_ENDRET
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.14.0")
public class Node {
  public static final String JSON_PROPERTY_ID = "id";
  @jakarta.annotation.Nonnull
  private Long id;

  public static final String JSON_PROPERTY_PORTER = "porter";
  @jakarta.annotation.Nonnull
  private List<Nodeport> porter = new ArrayList<>();

  public static final String JSON_PROPERTY_GYLDIGHETSPERIODE = "gyldighetsperiode";
  @jakarta.annotation.Nonnull
  private Gyldighetsperiode gyldighetsperiode;

  public static final String JSON_PROPERTY_GEOMETRI = "geometri";
  @jakarta.annotation.Nonnull
  private Geometristruktur geometri;

  public static final String JSON_PROPERTY_SIST_ENDRET = "sistEndret";
  @jakarta.annotation.Nonnull
  private OffsetDateTime sistEndret;

  public Node() {
  }

  public Node id(@jakarta.annotation.Nonnull Long id) {
    
    this.id = id;
    return this;
  }

  /**
   * Get id
   * @return id
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Long getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setId(@jakarta.annotation.Nonnull Long id) {
    this.id = id;
  }

  public Node porter(@jakarta.annotation.Nonnull List<Nodeport> porter) {
    
    this.porter = porter;
    return this;
  }

  public Node addPorterItem(Nodeport porterItem) {
    if (this.porter == null) {
      this.porter = new ArrayList<>();
    }
    this.porter.add(porterItem);
    return this;
  }

  /**
   * Get porter
   * @return porter
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_PORTER)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public List<Nodeport> getPorter() {
    return porter;
  }


  @JsonProperty(JSON_PROPERTY_PORTER)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setPorter(@jakarta.annotation.Nonnull List<Nodeport> porter) {
    this.porter = porter;
  }

  public Node gyldighetsperiode(@jakarta.annotation.Nonnull Gyldighetsperiode gyldighetsperiode) {
    
    this.gyldighetsperiode = gyldighetsperiode;
    return this;
  }

  /**
   * Get gyldighetsperiode
   * @return gyldighetsperiode
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_GYLDIGHETSPERIODE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Gyldighetsperiode getGyldighetsperiode() {
    return gyldighetsperiode;
  }


  @JsonProperty(JSON_PROPERTY_GYLDIGHETSPERIODE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setGyldighetsperiode(@jakarta.annotation.Nonnull Gyldighetsperiode gyldighetsperiode) {
    this.gyldighetsperiode = gyldighetsperiode;
  }

  public Node geometri(@jakarta.annotation.Nonnull Geometristruktur geometri) {
    
    this.geometri = geometri;
    return this;
  }

  /**
   * Get geometri
   * @return geometri
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_GEOMETRI)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Geometristruktur getGeometri() {
    return geometri;
  }


  @JsonProperty(JSON_PROPERTY_GEOMETRI)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setGeometri(@jakarta.annotation.Nonnull Geometristruktur geometri) {
    this.geometri = geometri;
  }

  public Node sistEndret(@jakarta.annotation.Nonnull OffsetDateTime sistEndret) {
    
    this.sistEndret = sistEndret;
    return this;
  }

  /**
   * Get sistEndret
   * @return sistEndret
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_SIST_ENDRET)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public OffsetDateTime getSistEndret() {
    return sistEndret;
  }


  @JsonProperty(JSON_PROPERTY_SIST_ENDRET)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setSistEndret(@jakarta.annotation.Nonnull OffsetDateTime sistEndret) {
    this.sistEndret = sistEndret;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Node node = (Node) o;
    return Objects.equals(this.id, node.id) &&
        Objects.equals(this.porter, node.porter) &&
        Objects.equals(this.gyldighetsperiode, node.gyldighetsperiode) &&
        Objects.equals(this.geometri, node.geometri) &&
        Objects.equals(this.sistEndret, node.sistEndret);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, porter, gyldighetsperiode, geometri, sistEndret);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Node {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    porter: ").append(toIndentedString(porter)).append("\n");
    sb.append("    gyldighetsperiode: ").append(toIndentedString(gyldighetsperiode)).append("\n");
    sb.append("    geometri: ").append(toIndentedString(geometri)).append("\n");
    sb.append("    sistEndret: ").append(toIndentedString(sistEndret)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

