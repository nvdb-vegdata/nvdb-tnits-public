/*
 * NVDB API Les Uberiket
 * Dette API-et brukes til å lese uberikede hendelser, vegobjekter og vegnett. Les mer om bruk av API-et på https://nvdb.atlas.vegvesen.no/produkter/nvdbapil/v1/Uberiket
 *
 * The version of the OpenAPI document: v1
 * Contact: nvdb@vegvesen.no
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package no.vegvesen.nvdb.apiles.uberiket;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonSubTypes;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.time.OffsetDateTime;
import no.vegvesen.nvdb.apiles.uberiket.Notifikasjonstype;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Notifikasjon
 */
@JsonPropertyOrder({
  Notifikasjon.JSON_PROPERTY_HENDELSE_ID,
  Notifikasjon.JSON_PROPERTY_TIDSPUNKT,
  Notifikasjon.JSON_PROPERTY_NOTIFIKASJONSTYPE
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.14.0")
@JsonIgnoreProperties(
  value = "notifikasjonstype", // ignore manually set notifikasjonstype, it will be automatically generated by Jackson during serialization
  allowSetters = true // allows the notifikasjonstype to be set during deserialization
)
@JsonTypeInfo(use = JsonTypeInfo.Id.NAME, include = JsonTypeInfo.As.PROPERTY, property = "notifikasjonstype", visible = true)
@JsonSubTypes({
  @JsonSubTypes.Type(value = VegnettNotifikasjon.class, name = "vegnett"),
  @JsonSubTypes.Type(value = VegobjektNotifikasjon.class, name = "vegobjekt"),
})

public class Notifikasjon {
  public static final String JSON_PROPERTY_HENDELSE_ID = "hendelseId";
  @jakarta.annotation.Nonnull
  protected Long hendelseId;

  public static final String JSON_PROPERTY_TIDSPUNKT = "tidspunkt";
  @jakarta.annotation.Nonnull
  protected OffsetDateTime tidspunkt;

  public static final String JSON_PROPERTY_NOTIFIKASJONSTYPE = "notifikasjonstype";
  @jakarta.annotation.Nonnull
  protected Notifikasjonstype notifikasjonstype;

  public Notifikasjon() {
  }

  public Notifikasjon hendelseId(@jakarta.annotation.Nonnull Long hendelseId) {
    
    this.hendelseId = hendelseId;
    return this;
  }

  /**
   * Get hendelseId
   * @return hendelseId
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_HENDELSE_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Long getHendelseId() {
    return hendelseId;
  }


  @JsonProperty(JSON_PROPERTY_HENDELSE_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setHendelseId(@jakarta.annotation.Nonnull Long hendelseId) {
    this.hendelseId = hendelseId;
  }

  public Notifikasjon tidspunkt(@jakarta.annotation.Nonnull OffsetDateTime tidspunkt) {
    
    this.tidspunkt = tidspunkt;
    return this;
  }

  /**
   * Get tidspunkt
   * @return tidspunkt
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_TIDSPUNKT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public OffsetDateTime getTidspunkt() {
    return tidspunkt;
  }


  @JsonProperty(JSON_PROPERTY_TIDSPUNKT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setTidspunkt(@jakarta.annotation.Nonnull OffsetDateTime tidspunkt) {
    this.tidspunkt = tidspunkt;
  }

  public Notifikasjon notifikasjonstype(@jakarta.annotation.Nonnull Notifikasjonstype notifikasjonstype) {
    
    this.notifikasjonstype = notifikasjonstype;
    return this;
  }

  /**
   * Get notifikasjonstype
   * @return notifikasjonstype
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_NOTIFIKASJONSTYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Notifikasjonstype getNotifikasjonstype() {
    return notifikasjonstype;
  }


  @JsonProperty(JSON_PROPERTY_NOTIFIKASJONSTYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setNotifikasjonstype(@jakarta.annotation.Nonnull Notifikasjonstype notifikasjonstype) {
    this.notifikasjonstype = notifikasjonstype;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Notifikasjon notifikasjon = (Notifikasjon) o;
    return Objects.equals(this.hendelseId, notifikasjon.hendelseId) &&
        Objects.equals(this.tidspunkt, notifikasjon.tidspunkt) &&
        Objects.equals(this.notifikasjonstype, notifikasjon.notifikasjonstype);
  }

  @Override
  public int hashCode() {
    return Objects.hash(hendelseId, tidspunkt, notifikasjonstype);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Notifikasjon {\n");
    sb.append("    hendelseId: ").append(toIndentedString(hendelseId)).append("\n");
    sb.append("    tidspunkt: ").append(toIndentedString(tidspunkt)).append("\n");
    sb.append("    notifikasjonstype: ").append(toIndentedString(notifikasjonstype)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

