/*
 * NVDB Datakatalog API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package no.vegvesen.nvdb.apiles.datakatalog;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import no.vegvesen.nvdb.apiles.datakatalog.Assosiasjonstype;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Relasjonstyper
 */
@JsonPropertyOrder({
  Relasjonstyper.JSON_PROPERTY_FORELDRE,
  Relasjonstyper.JSON_PROPERTY_BARN
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.14.0")
public class Relasjonstyper {
  public static final String JSON_PROPERTY_FORELDRE = "foreldre";
  @jakarta.annotation.Nonnull
  private List<Assosiasjonstype> foreldre = new ArrayList<>();

  public static final String JSON_PROPERTY_BARN = "barn";
  @jakarta.annotation.Nonnull
  private List<Assosiasjonstype> barn = new ArrayList<>();

  public Relasjonstyper() {
  }

  public Relasjonstyper foreldre(@jakarta.annotation.Nonnull List<Assosiasjonstype> foreldre) {
    
    this.foreldre = foreldre;
    return this;
  }

  public Relasjonstyper addForeldreItem(Assosiasjonstype foreldreItem) {
    if (this.foreldre == null) {
      this.foreldre = new ArrayList<>();
    }
    this.foreldre.add(foreldreItem);
    return this;
  }

  /**
   * Get foreldre
   * @return foreldre
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_FORELDRE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public List<Assosiasjonstype> getForeldre() {
    return foreldre;
  }


  @JsonProperty(JSON_PROPERTY_FORELDRE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setForeldre(@jakarta.annotation.Nonnull List<Assosiasjonstype> foreldre) {
    this.foreldre = foreldre;
  }

  public Relasjonstyper barn(@jakarta.annotation.Nonnull List<Assosiasjonstype> barn) {
    
    this.barn = barn;
    return this;
  }

  public Relasjonstyper addBarnItem(Assosiasjonstype barnItem) {
    if (this.barn == null) {
      this.barn = new ArrayList<>();
    }
    this.barn.add(barnItem);
    return this;
  }

  /**
   * Get barn
   * @return barn
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_BARN)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public List<Assosiasjonstype> getBarn() {
    return barn;
  }


  @JsonProperty(JSON_PROPERTY_BARN)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setBarn(@jakarta.annotation.Nonnull List<Assosiasjonstype> barn) {
    this.barn = barn;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Relasjonstyper relasjonstyper = (Relasjonstyper) o;
    return Objects.equals(this.foreldre, relasjonstyper.foreldre) &&
        Objects.equals(this.barn, relasjonstyper.barn);
  }

  @Override
  public int hashCode() {
    return Objects.hash(foreldre, barn);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Relasjonstyper {\n");
    sb.append("    foreldre: ").append(toIndentedString(foreldre)).append("\n");
    sb.append("    barn: ").append(toIndentedString(barn)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

